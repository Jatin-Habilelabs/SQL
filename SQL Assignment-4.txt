1. 	Write a query to display the last name, department number, and department name for all employees. 
       
Ans:- 
    	            SELECT last_name,departments.department_id ,department_name 
	            	FROM employees  JOIN departments 
		            ON employees.department_id=departments.department_id
	
2.	Create a unique listing of all jobs that are in department 8. Include the location of the department in the output.

Ans :- 
            SELECT distinct(job_title),employees.department_id,location_id from jobs 
        	JOIN  employees ON employees.job_id=jobs.job_id 
        	JOIN departments ON departments.department_id=employees.department_id
        	WHERE departments.department_id=8
       
3. 	Write a query to display the employee last name, department name, location ID, and city of all employees.

Ans:- 
        
		 SELECT last_name,department_name,dep.location_id,city 
		 FROM departments dep 
		JOIN employees  ON dep.department_id=employees.department_id
		JOIN locations loc ON dep.location_id=loc.location_id

4.	Display the employee last name and department name for all employees who have an a (lowercase) in their last names.   
    
Ans:- 

 		SELECT last_name,department_name 
		FROM employees 
		JOIN departments ON employees.department_id=departments.department_id
		WHERE last_name=lower(last_name)


5.	Write a query to display the last name, job, department number, and department name for all
employees who work in Toronto.     

Ans:- 

 		SELECT last_name,job_title,dep.department_id,department_name,city
		FROM employees
		Join departments dep ON dep.department_id=employees.department_id
		JOIN jobs ON jobs.job_id=employees.job_id 
		JOIN locations ON dep.location_id=locations.location_id
		WHERE city='Toronto'

6.	Display the employee last name and employee number along with their manager’s last name and manager number. Label the columns Employee, Emp#, Manager, and Mgr#, respectively.


Ans:- 

		SELECT  emp.last_name  || ' , '|| emp.employee_id  "Emp#",
		m.employee_id || ' , '|| m.last_name "Mgr#" 
		FROM employees as emp 
		JOIN employees m 
		ON (emp.manager_id = m.employee_id);
     
7. Modify the query of #6 to display all employees including King, who has no manager.

Ans:- 

 	SELECT  emp.last_name  || ' , '|| emp.employee_id  "Emp#",
	m.employee_id || ' , '|| m.last_name "Mgr#" 
	FROM employees as emp 
	left outer join employees m 
	ON (emp.manager_id = m.employee_id);

8. Create a query that displays employee last names, department numbers, and all the
employees who work in the same department as a given employee. Give each column an appropriate label.
   
Ans:- 
 		
	SELECT emp.department_id department, emp.last_name employee ,clg.last_name colleague
	FROM employees emp JOIN employees clg
	ON (emp.department_id = clg.department_id)
	WHERE emp.employee_id <> clg.employee_id
	ORDER BY emp.department_id, emp.last_name, clg.last_name;

10. Create a query to display the name and hire date of any employee hired after employee Daniel.

Ans:-
      	 	SELECT last_name,hire_date
	        FROM employees
		    WHERE hire_date>(SELECT hire_date FROM employees WHERE first_name='Daniel')

11. Display the names and hire dates for all employees who were hired before their managers, along with their manager’s names and hire dates. Label the columns Employee, Emp
	Hired, Manager, and Mgr Hired, respectively.
     

Ans:-   
		SELECT emp.last_name "Employee",emp.hire_date "Emp Hired",m.last_name "Manager",m.hire_date "Mgr Hired"
		FROM employees emp JOIN employees m
		ON emp.manager_id=m.employee_id
		WHERE emp.hire_date<m.hire_date
         
12. Determine the validity of the following three statements. Circle either True or False. 
	a. Group functions work across many rows to produce one result.
Ans:- True
	b. Group functions include nulls in calculations.

Ans:-  False
            c. The WHERE clause restricts rows prior to inclusion in a group calculation.
Ans:-   True
           
13. Display the highest, lowest, sum, and average salary of all employees. Label the columns
Maximum, Minimum, Sum, and Average, respectively. Round your results to the nearest whole number.
   
Ans:-
 
        
	SELECT ROUND(MIN(salary)) "Minimum",ROUND(MAX(salary)) "<Maximum",
	ROUND(SUM(salary)) "Sum",ROUND(AVG(salary)) "Average"  
	FROM employees

14. Modify the query in #13 to display the minimum, maximum, sum, and average salary for each job type.
     
Ans:-

	 SELECT ROUND(MIN(salary)) "Minimum",ROUND(MAX(salary)) "<Maximum",
	ROUND(SUM(salary)) "Sum",ROUND(AVG(salary)) "Average" 
	FROM employees GROUP BY job_id;
          
15. Write a query to display the number of people with the same job.

Ans:-
     	SELECT job_id ,count(*) "Number of Emp" 
	FROM employees GROUP BY job_id ORDER BY job_id
 	

16. Determine the number of managers without listing them. Label the column Number of
Managers. Hint: Use the MANAGER_ID column to determine the number of managers.
     
Ans:-
       
		SELECT manager_id ,count(*) "Number of Managers"
		FROM employees GROUP BY manager_id 
		ORDER BY manager_id

17. Write a query that displays the difference between the highest and lowest salaries. Label the column DIFFERENCE. 

    Ans:-
	SELECT MAX(salary) - MIN(salary) "DIFFERENCE"
	FROM employees;
 		
18. Display the manager number and the salary of the lowest paid employee for that manager.
Exclude anyone whose manager is not known. Exclude any groups where the minimum
salary is $6,000 or less. Sort the output in descending order of salary. 

Ans:-  



  	SELECT manager_id, MIN(salary)
	FROM employees
	GROUP BY manager_id
	ORDER BY MIN(salary) DESC;

19. Write a query to display each department’s name, location, number of employees, and the average salary for all employees in that department. Label the columns Name, Location,  Number of People, and Salary, respectively. Round the average salary to two decimal places.

Ans:-
 	SELECT department_name "Name",location_id "Location",
	count(*) "Number of People",ROUND(AVG(salary),2) Salary
	FROM departments JOIN employees ON 	employees.department_id=departments.department_id	
	GROUP BY location_id,department_name


20. Create a query to display the job, the salary for that job based on department number, and the total salary for that job, for departments 2, 5, 8, and 9, giving each column an appropriate heading.

Ans:- 
		SELECT job_title,salary,department_id ,SUM(salary) OVER(partition by job_title)
		FROM employees NATURAL JOIN jobs
		WHERE department_id in(2,5,8,9)
		GROUP BY job_title,salary,department_id
		ORDER BY department_id

 
		
21. Write a script to display the employee last name, job, and department name for a given location. The search condition should allow for case-insensitive searches of the department location.

Ans:-

		SELECT last_name "Employee",job_title "Job",department_name "Department",city  		"City"FROM employees emp 
		JOIN jobs ON emp.job_id=jobs.job_id 
		JOIN departments dep ON emp.department_id=dep.department_id
		JOIN locations ON dep.location_id=locations.location_id
		WHERE lower(city)=lower('Seattle')

22. create a report containing the department name, employee last name, hire date, salary, and each employee’s annual salary for all employees in a given location. Label the columns DEPARTMENT NAME, EMPLOYEE NAME, START DATE, SALARY, and ANNUAL SALARY, placing the labels on multiple lines

Ans:-


SELECT department_name "DEPARTMENT NAME", last_name "EMPLOYEE NAME" , hire_date "START DATE",
salary "SALARY" ,(salary*12) "ANNUAL SALARY",city "CITY"
FROM employees emp JOIN departments dep ON emp.department_id=dep.department_id
JOIN locations ON locations.location_id=dep.location_id
WHERE lower(city)=lower('seattle')

